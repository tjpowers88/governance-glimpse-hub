import React, { useState } from 'react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Copy, Send, Mail } from 'lucide-react';
import { Meeting, Board } from '../types/boardTypes';

interface EmailGeneratorProps {
  board: Board;
  meeting: Meeting;
  onClose: () => void;
}

const EmailGenerator: React.FC<EmailGeneratorProps> = ({ board, meeting, onClose }) => {
  const [emailGenerated, setEmailGenerated] = useState(false);

  const formatDate = (dateString: string) => {
    return new Date(dateString).toISOString().split('T')[0];
  };

  const generateEmailContent = () => {
    const totalDuration = meeting.agenda.reduce((sum, item) => sum + item.duration, 0);
    
    return `Subject: ${board.name} Meeting - ${formatDate(meeting.date)}

Dear Board Members,

You are invited to attend the upcoming ${board.name} meeting.

Meeting Details:
• Date: ${formatDate(meeting.date)}
• Time: ${meeting.startTime} - ${meeting.endTime}
• Location: ${meeting.location}
• Chairperson: ${meeting.chairperson}
• Secretary: ${meeting.secretary}

Agenda (Total Duration: ${totalDuration} minutes):

${meeting.agenda
  .sort((a, b) => a.order - b.order)
  .map((item, index) => 
    `${index + 1}. ${item.title} (${item.duration} min)
   Presenter: ${item.presenter}
   ${item.description}
   ${item.escalatedFrom ? `   [Escalated from ${item.escalatedFrom}]` : ''}
`
  ).join('\n')}

Please confirm your attendance and review any pre-meeting materials.

Best regards,
IT Governance Portal

---
This email was automatically generated by the IT Governance Portal.`;
  };

  const emailContent = generateEmailContent();

  const copyToClipboard = () => {
    navigator.clipboard.writeText(emailContent);
    setEmailGenerated(true);
  };

  return (
    <Card className="p-6 max-w-4xl mx-auto">
      <div className="flex items-center justify-between mb-6">
        <h3 className="text-xl font-semibold text-gray-900">Meeting Email Generator</h3>
        <Button variant="outline" onClick={onClose}>
          Close
        </Button>
      </div>

      <div className="mb-4">
        <Badge variant="outline" className="mb-2">
          <Mail className="h-3 w-3 mr-1" />
          Auto-generated for {board.name}
        </Badge>
      </div>

      <div className="bg-gray-50 p-4 rounded-lg mb-4 font-mono text-sm whitespace-pre-wrap border">
        {emailContent}
      </div>

      <div className="flex space-x-2">
        <Button onClick={copyToClipboard}>
          <Copy className="h-4 w-4 mr-2" />
          Copy to Clipboard
        </Button>
        <Button variant="outline">
          <Send className="h-4 w-4 mr-2" />
          Send Email
        </Button>
      </div>

      {emailGenerated && (
        <div className="mt-4 p-3 bg-green-50 border border-green-200 rounded-lg">
          <p className="text-sm text-green-700">Email content copied to clipboard!</p>
        </div>
      )}
    </Card>
  );
};

export default EmailGenerator;
